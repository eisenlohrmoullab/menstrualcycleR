[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"/articles/menstrualcycleR-overview.html","id":"understanding-the-challenge","dir":"Articles","previous_headings":"What is PACTS, Scaled Cycle Time, and menstrualcycleR?","what":"Understanding the Challenge","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"Despite decades research, still standard method operationalizing menstrual cycle continuous cyclical biological process. Traditional approaches—categorical phase labels linear day-counting methods—oversimplify cycle introduce misalignment underlying hormonal patterns. methods often assume ovulation occurs cycle midpoint ignore variation follicular versus luteal phase lengths, leading reduced power, misclassification, inconsistent findings across studies.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"introducing-pacts","dir":"Articles","previous_headings":"What is PACTS, Scaled Cycle Time, and menstrualcycleR?","what":"Introducing PACTS","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"Phase-Aligned Cycle Time Scaling (PACTS) method standardizes menstrual cycle time continuous variable aligned hormonally meaningful anchors: - Menses onset - Ovulation Rather dividing cycle arbitrary phases counting forward menses, PACTS treats cycle dynamic, time-varying system provides framework realign repeated measures (e.g., mood, symptoms, physiology) across individuals cycles. PACTS method implemented R package menstrualcycleR, provides tools : - Assigning cycle days cycle numbers - Estimating importing ovulation information - Creating scaled time variables centered ovulation menses - Visualizing checking cycle-level data","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"why-continuous-cycle-modeling","dir":"Articles","previous_headings":"What is PACTS, Scaled Cycle Time, and menstrualcycleR?","what":"Why Continuous Cycle Modeling?","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"Shifting categorical phase-based methods continuous modeling offers several advantages: Increased statistical power: observations per cycle can included analyses without discarding -phase days. Better precision: Continuous time captures subtle, within-phase changes masked averaging phases. flexible modeling: Mixed-effects models, splines, time-varying predictors can used model within- -person variation cycle dynamics. See Eisenlohr-Moul et al. (2020), Schmalenberger et al. (2024), Reen & Kiesner (2016) supporting discussions.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"anchoring-on-ovulation-and-menses","dir":"Articles","previous_headings":"What is PACTS, Scaled Cycle Time, and menstrualcycleR?","what":"Anchoring on Ovulation and Menses","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"prior approaches count days forward menses onset backward end cycle, fail align data ovulation, key inflection point hormonal dynamics. follicular phase (menses ovulation) highly variable length. luteal phase (ovulation next menses) consistent across individuals cycles. Accordingly, PACTS assigns scaled time using: - Ovulation day = 0 modeling ovulation-centered dynamics - Menses day = 0 studying perimenstrual processes (e.g., dysmenorrhea) modeling menses-centered, cycle scaled -1 +1, menses = 0, negative values representing luteal phase positive values representing follicular phase. modeling ovulation-centered, estimated day ovulation = 0, psotive values represent follicular phase negative values represent luteal phase. allows flexible model fitting retaining biologically meaningful time structure.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"estimating-ovulation-when-biomarkers-are-unavailable","dir":"Articles","previous_headings":"What is PACTS, Scaled Cycle Time, and menstrualcycleR?","what":"Estimating Ovulation When Biomarkers Are Unavailable","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"ovulation confirmed using biomarkers (e.g., LH surge, BBT), PACTS uses population-average method assigning day ovulation 15 days prior next menses onset (.e., last day follicular phase). backward-counting method preferable mid-cycle assumptions, often misclassify ovulation cycles short long follicular phases. use biomarkers still recommended whenever possible ensure precise alignment. Functions menstrualcycleR automatically flag imputed ovulation using binary column (ovtoday_impute) users can report model uncertainty.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"purpose-and-use-cases","dir":"Articles","previous_headings":"What is PACTS, Scaled Cycle Time, and menstrualcycleR?","what":"Purpose and Use Cases","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"ultimate goal PACTS menstrualcycleR provide open, reproducible framework support cycle-based research : - Affective behavioral science - Clinical research hormone-related disorders (e.g., PMDD, catamenial epilepsy) - Women’s health precision medicine using continuous, biologically aligned cycle time variable, researchers can better detect nuanced patterns symptoms, physiology, behavior vary across menstrual cycle.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"data-requirements-for-utilizing-pacts-and-menstrualcycler","dir":"Articles","previous_headings":"","what":"Data Requirements for Utilizing PACTS and menstrualcycleR","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"apply Phase-Aligned Cycle Time Scaling (PACTS) method core functionalities menstrualcycleR package, researchers must ensure dataset meets several key criteria:","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"daily-data-with-self-reported-menses-onset","dir":"Articles","previous_headings":"Data Requirements for Utilizing PACTS and menstrualcycleR","what":"1. Daily Data with Self-Reported Menses Onset","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"Accurate identification menstrual cycle boundaries essential. minimum, dataset must include: Self-reported menses onset dates throughout study period next menses onset date following study completion, ensure full-cycle alignment dates used define start cycle compute standardized time variables. Note: Menses onset imputed must provided usable cycles.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"ovulation-assessment-or-imputation","dir":"Articles","previous_headings":"Data Requirements for Utilizing PACTS and menstrualcycleR","what":"2. Ovulation Assessment or Imputation","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"estimated day ovulation (EDO) required analyses centered ovulatory phase. Ovulation may : Luteinizing hormone (LH) tests (EDO day positive test, LH+1 must reflected input dataset) Basal body temperature (BBT) (EDO day nadir, nadir+1 must reflected input dataset) Ultrasound hormone assays Imputed, biomarkers unavailable, based assumption 14–15 day luteal phase. case, ovulation assigned 15 days next menses onset menstrualcycleR Imputed ovulation days recorded binary column, ovtoday_impute, created using menstrualcycleR distinguishing confirmed values. Researchers strongly encouraged report proportion confirmed versus imputed ovulation days transparency scientific rigor.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"cycle-length-inclusion-criteria","dir":"Articles","previous_headings":"Data Requirements for Utilizing PACTS and menstrualcycleR","what":"3. Cycle Length Inclusion Criteria","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"default, menstrualcycleR includes cycles 21 35 days length standardized time variable computation. Cycles outside range excluded often show: Greater variability timing Increased likelihood anovulation range can modified user, especially cases ovulation confirmed cycles study population includes naturally shorter longer cycles. Additonally, menstrualcycleR scale luteal phases length 7 18 days. judgement based norms 600,000 ovulatory cycles reported Bull et al., (2019).","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"supported-variables-and-formats","dir":"Articles","previous_headings":"Data Requirements for Utilizing PACTS and menstrualcycleR","what":"4. Supported Variables and Formats","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"dataset include following columns:","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"installation-of-the-menstrualcycler-package","dir":"Articles","previous_headings":"","what":"Installation of the menstrualcycleR package","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"Currently menstrualcycleR package hosted Eisenlohr-Moul Lab’s (CLEAR Lab: Clarifying Endocrinology Acute Risk) GitHub repository. install GitHub, install load package `remotes`` running: install load menstrualcycleR package running: Note menstrualcycleR package depends several packages (mostly packages tidyverse suite). vignette also uses tidyverse functions recommended install load tidyverse suite running: Alternatively, individual packages can loaded independently: Additionally vignette, cover options use continuous cycle time measures generated menstrualcycleR nonlinear multilevel analyses using mgcv, gam.hp, marginaleffects packages. can install load packages running:","code":"install.packages(\"remotes\") library(remotes) remotes::install_github(\"eisenlohrmoullab/menstrualcycleR\") library(menstrualcycleR) #> Welcome to the menstrualcycleR package! #> If you use this package, please cite: #> Nagpal, A., Schmalenberger, K. M., Barone, J., Mulligan, E. M., Stumper, A., Knol, L., … Eisenlohr-Moul, T. A., PhD. (2025, May 6). Studying the Menstrual Cycle as a Continuous Variable: Implementing Phase-Aligned Cycle Time Scaling (PACTS) with the `menstrualcycleR` package. https://doi.org/10.31219/osf.io/hd5xw_v1 install.packages(\"tidyverse\") library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.2     ✔ tibble    3.3.0 #> ✔ lubridate 1.9.4     ✔ tidyr     1.3.1 #> ✔ purrr     1.1.0      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(dplyr) library(ggplot2) library(purrr) library(tibble) library(tidyr) library(stringr) library(magrittr) install.packages(\"mgcv\") install.packages(\"gam.hp\") install.packages(\"marginaleffects\") library(mgcv) #> Loading required package: nlme #>  #> Attaching package: 'nlme' #> The following object is masked from 'package:dplyr': #>  #>     collapse #> This is mgcv 1.9-1. For overview type 'help(\"mgcv-package\")'. library(gam.hp) #> Thank you for using this package! If you use this package in your research, please cite the following references #> Jiangshan Lai, Jing Tang, Tingyuan Li, Aiying Zhan, Lingfeng Mao. 2024. Evaluating the relative importance of predictors in Generalized Additive Models using the gam.hp R package. Plant Diversity, 46(4): 542-546 library(marginaleffects)"},{"path":[]},{"path":"/articles/menstrualcycleR-overview.html","id":"overview-of-package-functions","dir":"Articles","previous_headings":"Using menstrualcycleR","what":"Overview of Package Functions","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"menstrualcycleR package contains four main categories functions:","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"cycle-scaling-function-pacts_scaling","dir":"Articles","previous_headings":"Using menstrualcycleR > Overview of Package Functions","what":"1. Cycle Scaling Function: pacts_scaling()","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"function adds standardized cycle time variables dataset. scaled_cycleday: continuous cycle time variable centered menses onset (menses == 1 → 0), ranging –1 (start luteal phase) +1 (ovulation). Includes biomarker-confirmed ovulation cycles. scaled_cycleday_impute: , also includes cycles imputed ovulation (assigned day –15 next menses). Increases dataset coverage, lower precision. scaled_cycleday_ov: cycle time variable centered ovulation (ovtoday == 1 → 0), ranging –1 (start follicular phase) +1 (end luteal phase). Biomarker-confirmed ovulation . scaled_cycleday_imp_ov: , includes imputed ovulation (ovtoday_impute == 1) cycles lacking confirmation. Centered either confirmed imputed ovulation. ovtoday_impute: binary indicator identifying imputed ovulation days (value = 1), estimated 15 days next menses onset.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"data-checking-functions","dir":"Articles","previous_headings":"Using menstrualcycleR > Overview of Package Functions","what":"2. Data Checking Functions","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"functions assess completeness coverage dataset: cycledata_check(): Summarizes non-missing data cycle phase (follicular, luteal) overall. Also produces visualizations participant cycle phase. summary_ovulation(): Reports ovulation detection status: many cycles biomarker-confirmed ovulation many cycles required imputed ovulation using day –15 rule (ovtoday_impute == 1), based standard luteal phase length","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"data-visualization-functions","dir":"Articles","previous_headings":"Using menstrualcycleR > Overview of Package Functions","what":"3. Data Visualization Functions","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"Use functions plot outcomes across menstrual cycle: cycle_plot(): Creates sample-level plot symptom outcome trajectories across standardized cycle. Supports centering either menses ovulation, flexible y-axis scaling. cycle_plot_individual(): Provides participant-level plots across cycles selected symptoms. Useful individual inspection diagnostic review. functions: - Calculate per-cycle means deviations - Allow centering menses ovulation - compatible scaled time variables","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"launching-the-shiny-app-launch_app","dir":"Articles","previous_headings":"Using menstrualcycleR > Overview of Package Functions","what":"4. Launching the Shiny App: launch_app()","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"function launches interactive Shiny application uploading, checking, analyzing menstrual cycle data using package functions. app includes tools : - Scaled cycle time computation - Data completeness checks - Visualization person symptom - PMDD, MRMD, PME diagnosis using Carolina Premenstrual Assessment Scoring System (C-PASS) - Please note cycles utilized diagnosis CPASS defined counting days forward (+10) backward (-7) menses onset. C-PASS implemented via cpass R package. Please cite package utilize CPASS tool shiny app: Symul L, Eisenlohr-Moul T (2025). cpass: PMDD MRMD Diagnoses Following Carolina Premenstrual Assessment Scoring System (C-PASS). R package version 0.1.0. C-PASS diagnostic tool, see: Eisenlohr-Moul, T. ., Girdler, S. S., Schmalenberger, K. M., Dawson, D. N., Surana, P., Johnson, J. L., & Rubinow, D. R. (2017).Toward Reliable Diagnosis DSM-5 Premenstrual Dysphoric Disorder: Carolina Premenstrual Assessment Scoring System (C-PASS). American Journal Psychiatry, 174(1), 51–59. https://doi.org/10.1176/appi.ajp.2016.15121510 Please cite paper utilize CPASS tool shiny app. shiny app also accessible online : 👉 https://menstrualcycledata.shinyapps.io/shiny/","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"demo-dataset","dir":"Articles","previous_headings":"Using menstrualcycleR","what":"Demo dataset","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"explore menstrualcycleR package, use demo dataset simulated daily ratings (labeled symptom) 25 participants menses onset ovulation information. data simulated representative particular outcome may study across cycle. variable menses 1 indicating first day menstruation menses onset. variable ovtoday 1 indicating day positive luteinizing-hormone test, estimating day ovulation.","code":"cycle_df = cycledata dim(cycle_df) #> [1] 619   5 head(cycle_df) #>   id menses ovtoday symptom  daterated #> 1  1      1       0       5 2024-01-20 #> 2  1      0       0       5 2024-01-21 #> 3  1      0       0       3 2024-01-22 #> 4  1      0       0       2 2024-01-24 #> 5  1      0       0       1 2024-01-25 #> 6  1      0       0       1 2024-01-26"},{"path":"/articles/menstrualcycleR-overview.html","id":"applying-pacts","dir":"Articles","previous_headings":"Using menstrualcycleR","what":"Applying PACTS","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"full documentation, type ?pacts_scaling() R console. lower upper cycle length bounds may adjusted, default 21-35 days validated Nagpal et al., (2025). cycles 21 35 days get scaled, luteal phase confirmed ovulation menses onset 7-18 days. cycle_df_scaled now additional variables well observations. dataset went initially 614 observations cycle_df 739 observations cycle_df_scaled. scaling cycle using pacts_scaling(), cycle required complete sequence calendar days menses onset next menses onset. participant missed reporting symptoms day within cycle, function inserts placeholder rows NA values ensure continuity. process allows accurate computation cycle-aligned time variables.","code":"cycle_df_scaled = pacts_scaling(data = cycle_df, id = id, date = daterated, menses = menses, ovtoday = ovtoday, lower_cyclength_bound = 21, upper_cyclength_bound = 35) #> id: id #> date: date #> menses: menses #> ovtoday: ovtoday"},{"path":"/articles/menstrualcycleR-overview.html","id":"before-and-after-filling-missing-dates-within-a-cycle","dir":"Articles","previous_headings":"Using menstrualcycleR > Applying PACTS","what":"Before and After: Filling Missing Dates Within a Cycle","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"example showing pacts_scaling() fills rows missing dates real participant’s cycle. Original data (cycle_df) participant skipped reporting 2024-01-23. time series incomplete cycle scaling gap filled. scaling (cycle_df_scaled) function inserts placeholder row 2024-01-23 NA symptom column. ensures complete daily continuity menses end cycle.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"summary-of-row-counts","dir":"Articles","previous_headings":"Using menstrualcycleR > Applying PACTS","what":"Summary of Row Counts","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"ensuring complete daily coverage, pacts_scaling() allows downstream modeling visualization tools interpret menstrual cycle time continuous, standardized variable across individuals cycles.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"cycle-time-variables-are-added-in-cycle_df_scaled","dir":"Articles","previous_headings":"Using menstrualcycleR > Applying PACTS","what":"Cycle time variables are added in cycle_df_scaled","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"scaled_cycleday: continuous cycle time variable centered menses onset (menses == 1 → 0), ranging –1 (start luteal phase) +1 (ovulation). Includes biomarker-confirmed ovulation cycles. scaled_cycleday_impute: , also includes cycles imputed ovulation (assigned day –15 next menses). Increases dataset coverage, lower precision. scaled_cycleday_ov: cycle time variable centered ovulation (ovtoday == 1 → 0), ranging –1 (start follicular phase) +1 (end luteal phase). Biomarker-confirmed ovulation . scaled_cycleday_imp_ov: , includes imputed ovulation (ovtoday_impute == 1) cycles lacking confirmation. Centered either confirmed imputed ovulation. ovtoday_impute: binary indicator identifying imputed ovulation days (value = 1), estimated 15 days next menses onset. mcyclength: Indicates length menses--menses cycle observation belongs . luteal_length: Indicates length luteal phase observation belongs , ovulation imputed. cycle_inomplete binary indicator identifying observation part incomplete menses--menses cycle following additional variables may helpful menstrual cycle analysis, discussed detail Nagpal et al., (2025). cyclic_time continuous cycle time variable centered menses onset (menses == 1 → 0), ranging –1 +1. Unlike scaled_cycleday, -1 + 1 parameterized hormonal meaning ovulation. Includes biomarker-confirmed ovulation cycles. cyclic_time_impute , also includes cycles imputed ovulation (assigned day –15 next menses). Increases dataset coverage, lower precision. cyclic_time_ov cycle time variable centered ovulation (ovtoday == 1 → 0), ranging –1 +1. Unlike scaled_cycleday_ov, -1 + 1 parameterized hormonal meaning menses_onset. Includes biomarker-confirmed ovulation. cyclic_time_imp_ov , includes imputed ovulation (ovtoday_impute == 1) cycles lacking confirmation. Centered either confirmed imputed ovulation.","code":"names(cycle_df_scaled) #>  [1] \"id\"                     \"date\"                   \"menses\"                 #>  [4] \"ovtoday\"                \"symptom\"                \"daterated\"              #>  [7] \"m2mcount\"               \"mcyclength\"             \"cycle_incomplete\"       #> [10] \"cyclenum\"               \"ovtoday_impute\"         \"scaled_cycleday\"        #> [13] \"scaled_cycleday_ov\"     \"scaled_cycleday_impute\" \"scaled_cycleday_imp_ov\" #> [16] \"cyclic_time\"            \"cyclic_time_impute\"     \"cyclic_time_ov\"         #> [19] \"cyclic_time_imp_ov\"     \"luteal_length\""},{"path":"/articles/menstrualcycleR-overview.html","id":"checking-data-availability","dir":"Articles","previous_headings":"Using menstrualcycleR","what":"Checking Data availability","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"examine much non-missing data available, apply cycledata_check(), inputting resultant dataset (df_with_scaling) choosing outcomes like look . now, function examines number observations corresponding value scaled_cycleday_impute. examining 1 outcome: symptom. However, like look outcomes , replace c(\"symptom\") outcomes interest: e.g.c(\"symptom1\", \"symptom2\", \"symptom3\") function output warning IDs less 10 observations menses--menses cycle outcome selected. can examine much non-missing data symptom ID corresponding scaled cycle time measure (taking account imputed ovulation) overall, phase (luteal follicular). can also examine aggregate, looking sample whole: Overall, 574 observations non-NA non-missing values symptom scaled existed menses--menses cycles 21 35 days associated luteal phases (cycles reported value ovtoday) 7-18 days. can also visualize non-missing symptom data across cycle:","code":"checkdata = cycledata_check(cycle_df_scaled, symptom_columns = c(\"symptom\")) #> Warning: ID number 8 has < 10 observations for symptom checkdata$by_id #> # A tibble: 25 × 4 #>       id symptom_nonNA symptom_luteal symptom_follicular #>    <int>         <int>          <int>              <int> #>  1     1            20             10                 10 #>  2     2            22             12                 10 #>  3     3            26             13                 13 #>  4     4            26             11                 15 #>  5     5            18              6                 12 #>  6     6            31             12                 19 #>  7     7            20              6                 14 #>  8     8             9              0                  9 #>  9     9            29             13                 16 #> 10    10            28             11                 17 #> # ℹ 15 more rows checkdata$overall #> # A tibble: 1 × 3 #>   symptom_nonNA symptom_luteal symptom_follicular #>           <int>          <int>              <int> #> 1           575            218                357 checkdata$data_symptom_plots #> $symptom"},{"path":"/articles/menstrualcycleR-overview.html","id":"checking-ovulation-data-availability","dir":"Articles","previous_headings":"Using menstrualcycleR","what":"Checking Ovulation Data Availability","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"function help evaluate many cycles confirmed ovulation value prior using menstrualcycleR many cycles ovulation day imputed via 15-day backward count via pacts_scaling() function. (see Estimating Ovulation Biomarkers Unavailable Ovulation Assessment Imputation). can examine across entire sample: also id dataset: Researchers strongly encouraged report proportion confirmed versus imputed ovulation days transparency scientific rigor.","code":"ov_summary = summary_ovulation(cycle_df_scaled) ov_summary$ovstatus_total #>          Total Confirmed Ovulation #> N cycles                        14 #>          Total Estimated Ovulation via 15day Backward Count #> N cycles                                                 11 ov_summary$ovstatus_id #> # A tibble: 25 × 3 #>       id `Total cycles with confirmed ovulation` Total cycles with imputed ovu…¹ #>    <int>                                   <dbl>                           <dbl> #>  1     1                                       0                               1 #>  2     2                                       1                               0 #>  3     3                                       1                               0 #>  4     4                                       0                               1 #>  5     5                                       1                               0 #>  6     6                                       0                               1 #>  7     7                                       1                               0 #>  8     8                                       1                               0 #>  9     9                                       0                               1 #> 10    10                                       1                               0 #> # ℹ 15 more rows #> # ℹ abbreviated name: #> #   ¹​`Total cycles with imputed ovulation via 15day Backward Count`"},{"path":[]},{"path":"/articles/menstrualcycleR-overview.html","id":"cycle_plot","dir":"Articles","previous_headings":"Using menstrualcycleR > Visualizing outcomes across the cycle","what":"cycle_plot()","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"cycle_plot() function generates group-level visualization symptom outcome data across standardized menstrual cycle. function supports flexible centering (menses ovulation), person-centered raw scaling, optional smoothing via rolling averages. Rolling averages supported package zoo. Let’s take look parameters cycle_plot: data: dataframe containing cycle-aligned data. Must include relevant scaled cycle time variables (scaled_cycleday, scaled_cycleday_ov, etc.) symptom column. function work dataset run pacts_scaling() first. symptom: string specifying name symptom outcome variable visualize. centering: Whether center x-axis \"menses\" (default) \"ovulation\". determines scaled cycle day variable used. include_impute: Logical. TRUE, uses confirmed imputed ovulation cycles. Set FALSE restrict analysis biomarker-confirmed cycles . y_scale: Specifies scale y-axis: \"person-centered\": Mean person-centered values \"person-centered_roll\": Smoothed person-centered values (default) applies rolling average data, using zoo::rollapply \"means\": Raw mean values participants rollingavg: Number days used rolling average smoothing (default = 5). Computed using zoo::rollapply. align_val: Controls alignment rolling average window (\"center\", \"left\", \"right\"). Passed zoo::rollapply. se: Logical. TRUE, includes standard error ribbon around group mean.","code":"cycle_plot(   data,   symptom,   centering = \"menses\",   include_impute = TRUE,   y_scale = \"person-centered_roll\",   rollingavg = 5,   align_val = \"center\",   se = FALSE )"},{"path":"/articles/menstrualcycleR-overview.html","id":"note-on-rolling-averages","dir":"Articles","previous_headings":"Using menstrualcycleR > Visualizing outcomes across the cycle","what":"Note on Rolling Averages","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"y_scale = \"person-centered_roll\" selected, rolling averages calculated using zoo::rollapply() function, applies moving average time series, settings : use \"person_centered_roll\" option y_scale, please cite zoo package: Zeileis , Grothendieck G (2005). “zoo: S3 Infrastructure Regular Irregular Time Series.”Journal Statistical Software, 14(6), 1–27.https://doi.org/10.18637/jss.v014.i06","code":"zoo::rollapply(   variable,         # vector of values   rollingavg,       # size of the moving window (default = 5 days)   FUN = function(x) mean(x, na.rm = TRUE), # specifies a mean function to apply to each rolling window of values, ignoring missing values   align = \"center\", # align the output to the center of the window   fill = NA,        # fill edges with NA where full window is not available   partial = TRUE    # allow smaller windows at the beginning and end )"},{"path":"/articles/menstrualcycleR-overview.html","id":"symptom-menses-centered","dir":"Articles","previous_headings":"Using menstrualcycleR > Visualizing outcomes across the cycle","what":"Symptom, Menses-centered","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"cycle_plot() returns list three components: data: original data augmented person-mean (.m) deviation (.d) values symptom. “person-mean” average single participant’s repeated scores measurements time. represents way summarize “typical” given person, used “-person” “trait-level” analyses. • extension, “deviations person-mean” represent differences person’s score specific day (repeated measure interval) usual average (person-mean). tells us much higher lower compared normal, used “within-person” “state-level” analyses. summary: summary outcome variable 5% increment scaled cycle timeline.also provides standard errors se = T included function parameters. plot: ggplot2 object visualizing trajectory symptom variable across cycle.  plot ggplot object can edited using package ggplot2 saved using function ggsave().","code":"cycle_plot_df_menses <- cycle_plot(   cycle_df_scaled,   \"symptom\",   centering = \"menses\",   include_impute = TRUE,   y_scale = \"person-centered_roll\",    se = T ) cycle_plot_df_menses$data #> # A tibble: 744 × 25 #>       id date       menses ovtoday symptom daterated  m2mcount mcyclength #>    <int> <date>      <dbl>   <dbl>   <dbl> <date>        <dbl>      <dbl> #>  1     1 2024-01-20      1       0       5 2024-01-20        1         24 #>  2     2 2024-01-20      1       0       4 2024-01-20        1         26 #>  3     3 2024-01-20      1       0       3 2024-01-20        1         30 #>  4     4 2024-01-20      1       0       5 2024-01-20        1         30 #>  5     5 2024-01-20      1       0       5 2024-01-20        1         22 #>  6     6 2024-01-20      1       0       5 2024-01-20        1         35 #>  7     7 2024-01-20      1       0       5 2024-01-20        1         24 #>  8     8 2024-01-20      1       0       3 2024-01-20        1         32 #>  9     9 2024-01-20      1       0       5 2024-01-20        1         33 #> 10    10 2024-01-20      1       0       5 2024-01-20        1         32 #> # ℹ 734 more rows #> # ℹ 17 more variables: cycle_incomplete <dbl>, cyclenum <int>, #> #   ovtoday_impute <int>, scaled_cycleday <dbl>, scaled_cycleday_ov <dbl>, #> #   scaled_cycleday_impute <dbl>, scaled_cycleday_imp_ov <dbl>, #> #   cyclic_time <dbl>, cyclic_time_impute <dbl>, cyclic_time_ov <dbl>, #> #   cyclic_time_imp_ov <dbl>, luteal_length <dbl>, symptom.m <dbl>, #> #   symptom.d <dbl>, symptom.d.roll <dbl>, cycleday_perc <dbl>, … cycle_plot_df_menses$summary #> # A tibble: 22 × 3 #>    cycleday_5perc mean_dev_roll     se #>             <dbl>         <dbl>  <dbl> #>  1           0          1.03    0.178  #>  2           0.05       0.677   0.125  #>  3           0.1        0.0248  0.182  #>  4           0.15      -0.398   0.198  #>  5           0.2       -0.907   0.132  #>  6           0.25      -1.13    0.109  #>  7           0.3       -1.14    0.0702 #>  8           0.35      -0.663   0.107  #>  9           0.4       -0.00551 0.146  #> 10           0.45       0.613   0.122  #> # ℹ 12 more rows cycle_plot_df_menses$plot #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"/articles/menstrualcycleR-overview.html","id":"symptom-ovulation-centered","dir":"Articles","previous_headings":"Using menstrualcycleR > Visualizing outcomes across the cycle","what":"Symptom, Ovulation-centered","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"data, centered ovulation.","code":"cycle_plot_df_ov <- cycle_plot(   cycle_df_scaled,   \"symptom\",   centering = \"ovulation\",   include_impute = TRUE,   y_scale = \"person-centered_roll\",    se = T ) cycle_plot_df_ov$plot #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":[]},{"path":"/articles/menstrualcycleR-overview.html","id":"cycle_plot_individual","dir":"Articles","previous_headings":"Using menstrualcycleR > Visualizing Individual Participants and Cycles with cycle_plot_individual()","what":"cycle_plot_individual","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"cycle_plot_individual() function generates cycle-specific plots summaries given participant ID. function especially useful quality control, individualized data visualization. produces one plot per cycle, centered either menses ovulation, includes summary data . Rolling averages supported package zoo. Let’s take look parameters cycle_plot_individual: data: dataframe containing scaled cycle data least id, cyclenum, relevant symptom variables. dataframe must already include appropriate scaled cycle time columns. id: numeric character value specifying participant ID visualize. symptoms: character vector one symptom variables plot. centering: Center plot \"menses\" (default) \"ovulation\". Determines scaled time variable used. y_scale: Specifies type y-axis transformation: \"person-centered\": Deviation participant mean \"person-centered_roll\": Smoothed person-centered values (default) applies rolling average data, using zoo::rollapply \"raw\": Uncentered raw values \"roll\": Rolling average raw values include_impute: Logical. TRUE, includes cycles imputed ovulation. rollingavg: Number days use rolling average window (default = 5). Applies using \"roll\" \"person-centered_roll\" scales. Computed using zoo::rollapply. Note: use \"person_centered_roll\" \"roll\" option y_scale, please cite zoo package: Zeileis , Grothendieck G (2005). “zoo: S3 Infrastructure Regular Irregular Time Series.”Journal Statistical Software, 14(6), 1–27.https://doi.org/10.18637/jss.v014.i06","code":"cycle_plot_individual(   data,   id,   symptoms,   centering = \"menses\",   y_scale = \"person-centered\",   include_impute = TRUE,   rollingavg = 5 )"},{"path":"/articles/menstrualcycleR-overview.html","id":"symptom-menses-centered-1","dir":"Articles","previous_headings":"Using menstrualcycleR > Visualizing Individual Participants and Cycles with cycle_plot_individual()","what":"Symptom, Menses-centered","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"raw data symptom looks like across first (cycle) ID = 2:  can see, difficult examine trends. Smoothing using y_scale = \"roll\" y_scale = \"person_centered_roll\" help us understand trajectory looks like participant ID = 2.  Note Rolling Averages y_scale = \"person-centered_roll\" y_scale = \"roll\" selected, rolling averages calculated using zoo::rollapply() function, applies moving average time series, settings :","code":"cycle_plot_menses_id_2 <- cycle_plot_individual(   cycle_df_scaled,   id = 2,    \"symptom\",   centering = \"menses\",   y_scale = \"raw\",   include_impute = TRUE    )  cycle_plot_menses_id_2$symptom$Cycle_1$plot cycle_plot_menses_id_2 <- cycle_plot_individual(   cycle_df_scaled,   id = 2,    \"symptom\",   centering = \"menses\",   y_scale = \"roll\",   include_impute = TRUE,   rollingavg = 3 )  cycle_plot_menses_id_2$symptom$Cycle_1$plot zoo::rollapply(   variable,         # vector of values   rollingavg,       # size of the moving window (default = 5 days)   FUN = function(x) mean(x, na.rm = TRUE), # specifies a mean function to apply to each rolling window of values, ignoring missing values   align = \"center\", # align the output to the center of the window   fill = NA,        # fill edges with NA where full window is not available   partial = TRUE    # allow smaller windows at the beginning and end )"},{"path":"/articles/menstrualcycleR-overview.html","id":"cycle_plot_individual-output","dir":"Articles","previous_headings":"Using menstrualcycleR > Visualizing Individual Participants and Cycles with cycle_plot_individual()","what":"cycle_plot_individual Output","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"cycle_plot_individual() returns list two components accessible every menses--menses cycle exists individual: summary: summary outcome variable 5% increment scaled cycle timeline computed deviations/ rolling deviations. “Deviations person-mean” represent differences person’s score specific day (repeated measure interval) usual average (person-mean). tells us much higher lower compared normal, used “within-person” “state-level” analyses. plot: ggplot2 object visualizing trajectory symptom variable across cycle. summary plot accessible menses--menses cycle participant ID dataset.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"cycle_1-summary-for-id-2","dir":"Articles","previous_headings":"Using menstrualcycleR > Visualizing Individual Participants and Cycles with cycle_plot_individual()","what":"Cycle_1 summary for ID = 2","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"","code":"cycle_plot_menses_id_2$symptom$Cycle_1$summary #> # A tibble: 21 × 7 #>    cycleday_5perc mean_dev mean_dev_roll raw_sx sx_roll cycleday mcyclength #>             <dbl>    <dbl>         <dbl>  <dbl>   <dbl>    <dbl>      <dbl> #>  1           0       2.29          1.62     5      4.33     15           26 #>  2           0.05    0.286         1.29     3      4        16           26 #>  3           0.1    -0.214        -0.381    2.5    2.33     17.5         26 #>  4           0.15   -1.71         -1.71     1      1        19           26 #>  5           0.2    -1.71         -1.71     1      1        20           26 #>  6           0.25   -1.71         -1.71     1      1        21           26 #>  7           0.3    -1.71         -1.38     1      1.33     22           26 #>  8           0.35   -0.714        -1.05     2      1.67     23           26 #>  9           0.4     0.786         0.786    3.5    3.5      24.5         26 #> 10           0.45    2.29          2.29     5      5        26           26 #> # ℹ 11 more rows"},{"path":"/articles/menstrualcycleR-overview.html","id":"cycle_1-plot-for-id-2","dir":"Articles","previous_headings":"Using menstrualcycleR > Visualizing Individual Participants and Cycles with cycle_plot_individual()","what":"Cycle_1 plot for ID = 2","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"Cycles can also examined ovulation-centered.  plots ggplot objects can edited using package ggplot2 saved using function ggsave().","code":"cycle_plot_menses_id_2$symptom$Cycle_1$plot cycle_plot_ov_id_2 <- cycle_plot_individual(   cycle_df_scaled,   id = 2,    \"symptom\",   centering = \"ovulation\",   y_scale = \"roll\",   include_impute = TRUE,   rollingavg = 3 )  cycle_plot_ov_id_2$symptom$Cycle_1$plot"},{"path":"/articles/menstrualcycleR-overview.html","id":"modeling-menstrual-cycle-dynamics-with-generalized-additive-mixed-models-gamms","dir":"Articles","previous_headings":"","what":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs)","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"Okay — now ’ve used menstrualcycleR generate standardized menstrual cycle time variables can beautifully visualize outcomes across cycle (sample individual levels), may wondering: know outcome significantly changes across cycle? answer , turn generalized additive mixed models (GAMMs) via mgcv R package (Wood, 2017). GAMMs allow statistically evaluate whether meaningful, nonlinear changes outcome across time cycle, accounting repeated measures within individuals. GAMMs extend linear mixed-effects models incorporating smooth functions predictors, allowing researchers flexibly estimate curved trajectories without assuming specific polynomial shape. makes especially well-suited capturing dynamic cyclical nature menstrual cycle data.examples, use thin plate regression splines basis smooth terms. Thin plate splines flexible efficient smoothing method implemented default mgcv package (Wood, 2017). work placing penalty “wiggliness” fitted curve—ensuring model captures important trends without overfitting noise. Key characteristics smooth functions using thin plate splines: adapt data’s shape without requiring pre-specified knot placement. Smoother fits lower effective degrees freedom (EDF); flexible (wiggly) fits higher EDF. Penalization prevents overfitting enhances generalizability new data. menstrual cycle modeling, allow data-driven estimation inflection points asymmetries.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"model-specifications","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs)","what":"Model Specifications","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"generalized additive mixed model (GAMM) framework, adopt flexible approach accommodates nonlinear trends individual-level variation across menstrual cycle: Models estimated using restricted maximum likelihood (REML), provides stable unbiased estimates smoothness parameters, particularly mixed-effects settings. example, assume Gaussian distribution identity link function outcome variable. However, GAMMs can accommodate variety outcome distributions.Important: always assess distribution residuals consider alternative families appropriate (e.g., Poisson count data, binomial binary outcomes). See family.mgcv Wood, S.N., Pya, N., & Saefken, B. (2016). Smoothing parameter model selection general smooth models. Journal American Statistical Association, 111, 1548–1575. https://doi.org/10.1080/01621459.2016.1180986 fixed effects (population-level trends) random effects (individual-level variation) modeled smooth terms, providing flexibility capture nonlinearity without assuming specific functional form. Smooth terms constructed using thin plate regression splines, default recommended basis mgcv package. splines automatically penalized minimize overfitting promote interpretability. Time-varying predictors created menstrualcycleR—scaled_cycleday_impute, scaled_cycleday, scaled_cycleday_imp_ov—can directly included smooth terms model specification (e.g., s(scaled_cycleday_impute)). Missing data addressed using listwise deletion: observations complete data outcome predictors retained model fitting process. “) Compared traditional modeling strategies (e.g., phase-based contrasts linear time effects), GAMMs offer: Data-driven flexibility model smooth trends. Avoidance arbitrary knot placement boundary instability. ability model subject-specific trajectories random smooths. Easy alignment biologically meaningful time variables (e.g., centered menses ovulation). modeling framework allows researchers explore subtle changes patterns across menstrual cycle greater precision interpretability. now demonstrate use GAMMs sample dataset provided menstrualcycleR.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"running-a-gamm","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs)","what":"Running a GAMM","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"utilize observations available us, use variable scaled_cycleday_impute predictor.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"data-preparation","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Running a GAMM","what":"Data Preparation","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":", log-transform outcome variable symptom, oftentimes many biological behavioral outcomes (e.g. hormone levels, reaction times, symptom scores) right-skewed. Log-transforming outcomes often results distribution symmetric approximately normal. However, always assess model heteroscedascity examine distribution residuals. now create dataframe called datSX includes complete cases variables scaled_cycleday_impute symptom_log. GAMMs mgcv package use listwise deletion, meaning model include rows missing values across variables formula. pre-filtering dataset using complete.cases(), can determine exactly many observations included model. ensures transparency avoids confusion interpreting model results. Let’s run GAMM! model includes: symptom_log outcome variable (log-transformed symptom). s(scaled_cycleday_impute) smooth term modeling fixed effect cycle time (scaled, centered menses) across sample. captures nonlinear, average trends symptom cycle. s(id, bs = 're') random intercept participant. accounts individual differences average symptom level. s(scaled_cycleday_impute, id, bs = 're') random slope: models participant’s cycle trajectory may deviate population-level pattern. allows person-specific nonlinear trends across cycle. data = datSX dataset used model fitting. contain complete cases model variables. method = 'REML' Fits model using Restricted Maximum Likelihood, improves estimation smoothness variance components, especially presence random effects. “)","code":"cycle_df_scaled$symptom_log = log(cycle_df_scaled$symptom + 1) #log-transforming our outcome variable symptom selected_vars <- c(\"scaled_cycleday_impute\", \"symptom_log\" ) datSX <- cycle_df_scaled[complete.cases(cycle_df_scaled[selected_vars]), ] datSX$id = as.factor(datSX$id) # ALWAYS factor id before putting it in a gam formula  gamm1 <- mgcv::gam(   symptom_log ~      s(scaled_cycleday_impute) +      s(id, bs = 're') +      s(scaled_cycleday_impute, id, bs = 're'),   data = datSX,    method = 'REML' )"},{"path":"/articles/menstrualcycleR-overview.html","id":"interpreting-the-gamm-summary-output","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs)","what":"Interpreting the GAMM Summary Output","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"fitting model gam(), can view summary : returns several important components:","code":"summary(gamm1)"},{"path":"/articles/menstrualcycleR-overview.html","id":"model-family-link","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Interpreting the GAMM Summary Output","what":"Model Family & Link","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"outcome modeled using Gaussian (normal) distribution identity link (.e., predicted values scale outcome). appropriate continuous, unbounded outcome variables.","code":"Family: gaussian  Link function: identity"},{"path":"/articles/menstrualcycleR-overview.html","id":"model-formula","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Interpreting the GAMM Summary Output","what":"Model Formula","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"smooth term population-level cyclic trends. random intercept smooth function participant. random slope smooth function capturing individual-specific trajectories across cycle.","code":"symptom_log ~ s(scaled_cycleday_impute) + s(id, bs = \"re\") +                s(scaled_cycleday_impute, id, bs = \"re\")"},{"path":"/articles/menstrualcycleR-overview.html","id":"parametric-coefficients","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Interpreting the GAMM Summary Output","what":"Parametric Coefficients","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"intercept represents average value log-transformed symptom smooth terms reference level.","code":"(Intercept)  1.30485    0.01821   71.65   <2e-16 ***"},{"path":"/articles/menstrualcycleR-overview.html","id":"smooth-terms","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Interpreting the GAMM Summary Output","what":"Smooth Terms","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"smooth term contributes explaining nonlinear hierarchical effects: high edf (≈8.5) reflects flexibility shape curve. Higher edf indicates “wiggles” complexity nonlinear pattern. small p-value suggests population-level pattern strongly significant nonlinearity significant p-value (p = 0.00082) indicates meaningful variation symptom baseline levels. effect statistically significant (p = 4.37e-05), indicating nonlinear heterogeneity individuals experience symptom changes across time.","code":"s(scaled_cycleday_impute)     edf = 8.49   F = 64.99   p < 2e-16 *** s(id)                         edf = 12.69  F = 1.34    p = 0.00082 *** s(scaled_cycleday_impute,id)  edf = 15.80  F = 1.96    p = 4.37e-05 ***"},{"path":"/articles/menstrualcycleR-overview.html","id":"model-fit","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Interpreting the GAMM Summary Output","what":"Model Fit","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"Adjusted R² 0.531: model explains 53% variance log-transformed symptom outcome. roughly squared correlation observed fitted values, adjusted model complexity. used assess overall model fit working Gaussian models. Deviance explained: Another metric showing 56% outcome variability accounted . Deviance likelihood-based measure, general R², comes comparing model’s deviance (measure error) null model. used comparing models working non-normal outcomes. REML: Indicates restricted maximum likelihood used model fitting—important selecting smoothing parameters GAMs. n = 575: number complete observations included model listwise deletion. results suggest average, symptom varies significantly across cycle nonlinear way, individuals also show unique, person-specific patterns symptom change time – .e. significant individual differences nonlinear trends across cycle.","code":"R-sq.(adj) =  0.531    Deviance explained = 56.1% -REML = 122.04   Scale est. = 0.07643    n = 575"},{"path":"/articles/menstrualcycleR-overview.html","id":"visualizing-your-gamm-across-the-menstrual-cycle","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs)","what":"Visualizing your GAMM across the menstrual cycle","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"best way understand nonlinear trend outcome, described GAMM, across menstrual cycle plot . Future iterations menstrualcycleR may include model-implied plotting functions, now share code .","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"first-we-need-to-compute-predicted-or-model-implied-values","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Visualizing your GAMM across the menstrual cycle","what":"First, we need to compute predicted or model-implied values","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"","code":"plotdat <- expand.grid(scaled_cycleday_impute = seq(-1, 1, by = 0.05),                       id = 0) # setting id = 0 suppresses random effects, to model the just the fixed effect (sample-wide) of your outcome across the cycle  # Predict using the model for each dataset and add predictions pred <- marginaleffects::predictions(gamm1, newdata = plotdat, type = \"response\", transform = function(x) exp(x) - 1) # applying a transform function, to undo to the log transformation on symptom. The transform can be removed if your outcome was not log-transformed  plotdat$estimate = pred$estimate plotdat$conf.low = pred$conf.low plotdat$conf.high = pred$conf.high"},{"path":"/articles/menstrualcycleR-overview.html","id":"plotting-model-implied-values","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Visualizing your GAMM across the menstrual cycle","what":"Plotting model-implied values","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"","code":"# Plotting gamplot <- ggplot(plotdat, aes(x = scaled_cycleday_impute, y = estimate)) +   scale_x_continuous(limits = c(-1, 1), breaks = seq(-1, 1, by = 0.50),                       labels = c(\"0%L\", \"50%L\", \"Menses Onset\", \"50%F\", \"Ovulation\")) +   labs(x = \"\", y = \"Symptom\") + # You can change the y-axis label to reflect your outcome      geom_rect(xmin = -0.04, xmax = 0.04, ymin = -Inf, ymax = Inf,             fill = \"grey70\", alpha = 0.2, color = \"white\") +   geom_rect(xmin = 0.92, xmax = 1, ymin = -Inf, ymax = Inf,             fill = \"grey87\", alpha = 0.2, color = \"white\") +   geom_line(size = 1, show.legend = TRUE) +   # Adding CI ribbon with translucent light grey color   geom_ribbon(aes(ymin = conf.low, ymax = conf.high), fill = \"lightgrey\", alpha = 0.3) +   theme_minimal() #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated.  # Print the plot print(gamplot)"},{"path":"/articles/menstrualcycleR-overview.html","id":"understanding-effect-sizes-in-a-multilevel-context","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs)","what":"Understanding Effect Sizes in a Multilevel Context","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"analyzing data repeated observations per participant—daily symptom ratings across menstrual cycle—’s essential understand variability outcome can arise within-person (day--day fluctuations) -person (individual/trait-like differences) sources. Multilevel hierarchical models, including Generalized Additive Mixed Models (GAMMs), designed account structure estimating fixed random effects.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"why-multilevel-effect-sizes-matter","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Understanding Effect Sizes in a Multilevel Context","what":"Why Multilevel Effect Sizes Matter","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"Effect sizes multilevel models complex simple regression tied variance components across levels model: Fixed effects estimate average trends across entire sample. Random effects capture individuals deviate average trends. context menstrual cycle research, particularly interested much variation outcome (e.g., mood, sleep, pain) can attributed : sample-wide, average effect cycle (fixed effect cycle). Individual differences people change across cycle (random slope effects). Stable individual differences explained cycle (random intercepts).","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"partitioning-variance-a-primer","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Understanding Effect Sizes in a Multilevel Context","what":"Partitioning Variance: A Primer","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"GAMM summary output includes Deviance explained statistic, represents proportion total outcome variance explained model. understand outcome variance explained model: Residual variance = 1 - Deviance explained quantifies within-person error—, much outcome variability accounted model. menstrual cycle research, residual reflects symptom fluctuations align fixed random cycle pattern. random intercept component can interpreted analogously. can considered capture -person error: degree individuals differ average level outcome. words, reflects stable individual differences unrelated cycle timing. Deviance explained statistic represents overall proportion variance outcome explained model, composite value distinguish within-person -person variance. disentangle , turn frameworks like Rights & Sterba (2019), detail attribute variance various fixed random components. GAMMs, can extend framework using tools like gam.hp package quantify variance explained specific predictors determine whether operate within- -person level. table summarizing key types predictors menstrual cycle multilevel modeling interpretation, specific menstrual cycle research: Understanding Multilevel Effects Menstrual Cycle Modeling","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"key-takeaway","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Understanding Effect Sizes in a Multilevel Context","what":"Key Takeaway","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"menstrual cycle inherently within-person predictor—time-varying process experienced repeatedly across individuals. fitting models like GAMMs, want understand much within-person variance symptoms explained cycle average (fixed effect), much explained individual-specific cycle trajectories (random slopes). random intercept represents -person differences symptom levels, may reflect stable traits driven cycle. can partition model variance components, using gam.hp package (Lai, et al., 2024). helps us gain clearer understanding reliability individual variability menstrual cycle effects—crucial goal rigorous cycle science.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"hierarchical-variance-partitioning-with-gam-hp","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Understanding Effect Sizes in a Multilevel Context","what":"Hierarchical Variance Partitioning with gam.hp","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"model-explained variance can differ based model parameters, total outcome variance stable particular outcome dataset. Proportion total outcome variance can compared models outcome understand influence different predictors. reason, interpret Individual column gam.hp output: s(scaled_cycleday_impute): fixed effect cycle time explains 51.1% (0.5110) 0.5460 total outcome variance. shows large portion outcome variation captured average, population-level cycle dynamics. s(id, bs = “re”): random intercept explains 2.12% (0.0212) total outcome variance. reflects -person differences average outcome level—.e., individual baselines explained cycle dynamics explained unmeasured trait variables (e.g. age, BMI). s(scaled_cycleday_impute, id): random slope effect explains 2.12% (0.0212) total outcome variance. reflects individual differences trajectories outcome across cycle, beyond average pattern. Okay now understand variance can partitioned multilevel models GAMMs, lets take look calculating total within-person variance within-person variance accounted cycle.","code":"var.part = gam.hp::gam.hp(gamm1) var.part$hierarchical.partitioning  #>                                      Unique Average.share Individual I.perc(%) #> s(scaled_cycleday_impute)            0.5460       -0.0350     0.5110     91.09 #> s(id,bs=\"re\")                        0.0345       -0.0133     0.0212      3.78 #> s(scaled_cycleday_impute,id,bs=\"re\") 0.0460       -0.0172     0.0288      5.13"},{"path":"/articles/menstrualcycleR-overview.html","id":"proportion-of-total-within-person-variance","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Understanding Effect Sizes in a Multilevel Context","what":"Proportion of Total Within-Person Variance","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"","code":"# Step 1: Create the data frame variance_df <- data.frame(   Component = c(\"Fixed effect of the cycle\",                  \"Random slope of the cycle\",                  \"Within-person residual\"),   Term = c(\"s(scaled_cycleday_impute)\",             \"s(scaled_cycleday_impute, id)\",             \"Residual (1 - Deviance Explained)\"),   Proportion = c(0.5460, 0.0212, 0.4328)   )  # Normalize  variance_df <- variance_df %>%   mutate(Percent = round(Proportion / sum(Proportion) * 100, 1),          Label = paste0(Component, \"\\n\", Percent, \"%\"))  # Step 2: Display table knitr::kable(variance_df[, c(\"Component\", \"Term\", \"Proportion\")],        col.names = c(\"Component\", \"Model Term\", \"Proportion of Within-Person Variance\")) # Step 3: Create pie chart ggplot(variance_df, ggplot2::aes(x = \"\", y = Proportion, fill = Label)) +   geom_col(width = 1, color = \"white\") +   coord_polar(\"y\") +   theme_void() +   labs(title = \"Total Within-person Variance\") +   theme(legend.title = element_blank())"},{"path":"/articles/menstrualcycleR-overview.html","id":"within-person-variance-accounted-for-by-the-menstrual-cycle","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Understanding Effect Sizes in a Multilevel Context","what":"Within-person Variance Accounted for by the Menstrual Cycle","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"","code":"# Step 1: Create the data frame variance_df <- data.frame(   Component = c(\"Fixed effect of the cycle\",                  \"Random slope of the cycle\"),   Term = c(\"s(scaled_cycleday_impute)\",             \"s(scaled_cycleday_impute, id)\"),   Proportion = c(0.5460, 0.0212)   )  # Normalize  variance_df <- variance_df %>%   mutate(Percent = round(Proportion / sum(Proportion) * 100, 1),          Label = paste0(Component, \"\\n\", Percent, \"%\"))  # Step 2: Display table knitr::kable(variance_df[, c(\"Component\", \"Term\", \"Proportion\")],        col.names = c(\"Component\", \"Model Term\", \"Within-Person Variance Accounted for by the Cycle\")) # Step 3: Create pie chart ggplot(variance_df,aes(x = \"\", y = Proportion, fill = Label)) +   geom_col(width = 1, color = \"white\") +   coord_polar(\"y\") +   theme_void() +   labs(title = \"Within-person Variance accounted for by the cycle\") +   theme(legend.title = element_blank())"},{"path":"/articles/menstrualcycleR-overview.html","id":"interpreting-effect-sizes-and-cycle-explained-variance","dir":"Articles","previous_headings":"Modeling Menstrual Cycle Dynamics with Generalized Additive Mixed Models (GAMMs) > Understanding Effect Sizes in a Multilevel Context","what":"Interpreting Effect Sizes and Cycle-Explained Variance","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"Understanding constitutes meaningful effect size clinically significant cycle-explained variance menstrual cycle research still evolving area. universal benchmarks currently exist, important consider statistical variance relates clinically meaningful changes outcomes across cycle. reporting variance partitioning metrics—breakdowns total variance, total within-person variance, within-person variance explained cycle—contribute growing body research aims clarify levels cycle-related variance meaningful. Including metrics provides greater transparency, promotes comparability across studies, supports development evidence-based thresholds interpreting effects menstrual cycle research.","code":""},{"path":"/articles/menstrualcycleR-overview.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Getting Started with menstrualcycleR and Phase-Aligned Cycle Time Scaling (PACTS)","text":"Eisenlohr-Moul, T. ., Girdler, S. S., Schmalenberger, K. M., Dawson, D. N., Surana, P., Johnson, J. L., & Rubinow, D. R. (2017). Toward reliable diagnosis DSM-5 premenstrual dysphoric disorder: Carolina Premenstrual Assessment Scoring System (C-PASS). American Journal Psychiatry, 174(1), 51–59. https://doi.org/10.1176/appi.ajp.2016.15121510 Eisenlohr-Moul, T. ., Kaiser, G., Weise, C., Schmalenberger, K. M., Kiesner, J., Ditzen, B., & Kleinstäuber, M. (2020). temporal subtypes premenstrual dysphoric disorder?: Using group-based trajectory modeling identify individual differences symptom change. Psychological Medicine, 50(6), 964–972. https://doi.org/10.1017/S0033291719000849 Lai, J., Tang, J., Li, T., Zhang, ., & Mao, L. (2024). Evaluating relative importance predictors Generalized Additive Models using gam.hp R package. Plant Diversity, 46(4), 542–546. https://doi.org/10.1016/j.pld.2024.06.002 Nagpal, ., Schmalenberger, K. M., Barone, J., Mulligan, E. M., Stumper, ., Knol, L., … Eisenlohr-Moul, T. ., PhD. (2025, May 6). Studying Menstrual Cycle Continuous Variable: Implementing Phase-Aligned Cycle Time Scaling (PACTS) menstrualcycleR package. https://doi.org/10.31219/osf.io/hd5xw_v1 Reen, E., & Kiesner, J. (2016). Individual differences self-reported difficulty sleeping across menstrual cycle. Archives Women’s Mental Health, 19(4), 599–608. https://doi.org/10.1007/s00737-016-0621-9 Rights, J. D., & Sterba, S. K. (2019). Quantifying explained variance multilevel models: integrative framework defining R-squared measures. Psychological Methods, 24(3), 309–338. https://doi.org/10.1037/met0000184 Schmalenberger, K. M., Tauseef, H. ., Barone, J. C., Owens, S. ., Lieberman, L., Jarczok, M. N., Girdler, S. S., Kiesner, J., Ditzen, B., & Eisenlohr-Moul, T. . (2021). study menstrual cycle: Practical tools recommendations. Psychoneuroendocrinology, 123, 104895. https://doi.org/10.1016/j.psyneuen.2020.104895 Symul, L., & Eisenlohr-Moul, T. (2025). cpass: PMDD MRMD diagnoses following Carolina Premenstrual Assessment Scoring System (C-PASS) (R package version 0.1.0). Wood, S.N., Pya, N., & Saefken, B. (2016). Smoothing parameter model selection general smooth models. Journal American Statistical Association, 111, 1548–1575. https://doi.org/10.1080/01621459.2016.1180986 Wood, S. N. (2017). Generalized Additive Models: Introduction R (2nd ed.). Chapman Hall/CRC. Zeileis, ., & Grothendieck, G. (2005). zoo: S3 infrastructure regular irregular time series. Journal Statistical Software, 14(6), 1–27. https://doi.org/10.18637/jss.v014.i06","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anisha Nagpal. Author, maintainer. Tory Eisenlohr-Moul. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nagpal , Eisenlohr-Moul T (2025). menstrualcycleR: Tools Phase-Aligned Cycle Time Scaling (PACTS) Menstrual Cycle Analysis. R package version 0.0.0.9000, https://osf.io/preprints/osf/hd5xw_v1?view_only=.","code":"@Manual{,   title = {menstrualcycleR: Tools for Phase-Aligned Cycle Time Scaling (PACTS) and Menstrual Cycle Analysis},   author = {Anisha Nagpal and Tory Eisenlohr-Moul},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://osf.io/preprints/osf/hd5xw_v1?view_only=}, }"},{"path":"/index.html","id":"how-to-install-and-load-menstrualcycler","dir":"","previous_headings":"","what":"Tools for Phase-Aligned Cycle Time Scaling (PACTS) and Menstrual Cycle Analysis","title":"Tools for Phase-Aligned Cycle Time Scaling (PACTS) and Menstrual Cycle Analysis","text":"install load menstrualcycleR package, follow steps: Install remotes package (already installed): install.packages(\"remotes\") Install menstrualcycleR GitHub remotes::install_github(\"eisenlohrmoullab/menstrualcycleR\") Load package library(menstrualcycleR) utilize shinyapp, visit: https://menstrualcycledata.shinyapps.io/shiny/ tutorial using menstrualcycleR visit: https://eisenlohrmoullab.github.io/menstrualcycleR/articles/menstrualcycleR-overview.html","code":""},{"path":"/reference/cycle_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Symptom Data Across the Menstrual Cycle — cycle_plot","title":"Plot Symptom Data Across the Menstrual Cycle — cycle_plot","text":"function creates visual representation symptom data across menstrual cycle. calculates mean deviation values symptom participant, allows centering visualization menses ovulation, provides flexibility choosing y-axis scale plot.","code":""},{"path":"/reference/cycle_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Symptom Data Across the Menstrual Cycle — cycle_plot","text":"","code":"cycle_plot(   data,   symptom,   centering = \"menses\",   include_impute = TRUE,   y_scale = \"person-centered_roll\",   rollingavg = 5,   align_val = \"center\",   se = F )"},{"path":"/reference/cycle_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Symptom Data Across the Menstrual Cycle — cycle_plot","text":"data dataframe containing input data. Must include columns scaled cycle day variables symptom variable. Scaled cycle day variables added dataframe applying calculate_mcyclength() calculate_cycletime() functions. (See examples ) symptom string specifying symptom variable analyze. centering string indicating centering phase cycle (\"menses\" \"ovulation\"). Default \"menses\". include_impute boolean indicating whether use imputed cycle time values based NC cycle length norms. Default TRUE. y_scale string specifying y-axis scale. Options \"person-centered\", \"person-centered_roll\", \"means\". Default \"person-centered_roll\". rollingavg numeric indicating many days rolling average use, default 5 se boolean indicating whether include standard error ribbon. Default False alignval zoo package, using rollapply: alignment rolling avg. Can \"center\", \"left\", \"right\"","code":""},{"path":"/reference/cycle_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Symptom Data Across the Menstrual Cycle — cycle_plot","text":"list containing following elements: 1. dataframe: input dataframe augmented person-centered mean (.m) deviation (.d) values symptom variable. 2. summary dataframe: Contains summarized y-axis variable values 5% increment cycle percentage. 3. ggplot object: plot visualizing summarized data across menstrual cycle.","code":""},{"path":"/reference/cycle_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Symptom Data Across the Menstrual Cycle — cycle_plot","text":"","code":"# Example usage: data(cycledata)  data_with_scaling <- pacts_scaling(   data,    id = id,    date = date,    menses = menses,    ovtoday = ovtoday,    lower_cyclength_bound = 21,    upper_cyclength_bound = 35 ) #> Error in UseMethod(\"mutate\"): no applicable method for 'mutate' applied to an object of class \"function\"  cycle_plot_data <- cycle_plot(   data_with_scaling,   \"symptom\",   centering = \"menses\",   include_impute = TRUE,   y_scale = \"person-centered\" ) #> Error: object 'data_with_scaling' not found cycle_plot_data$plot #> Error: object 'cycle_plot_data' not found"},{"path":"/reference/cycle_plot_individual.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Cycle-Specific Plots and Summary Data for a Given ID — cycle_plot_individual","title":"Generate Cycle-Specific Plots and Summary Data for a Given ID — cycle_plot_individual","text":"function creates cycle-specific plots summary statistics specified individual (id), storing named list easy access.","code":""},{"path":"/reference/cycle_plot_individual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Cycle-Specific Plots and Summary Data for a Given ID — cycle_plot_individual","text":"","code":"cycle_plot_individual(   data,   id,   symptoms,   centering = \"menses\",   y_scale = \"person-centered\",   include_impute = TRUE,   rollingavg = 5 )"},{"path":"/reference/cycle_plot_individual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Cycle-Specific Plots and Summary Data for a Given ID — cycle_plot_individual","text":"data dataframe containing menstrual cycle data, including id cyclenum columns. id Numeric id number specific individual cycle plots generated. symptoms vector strings specifying symptom variable analyze exist data. centering string indicating centering phase cycle (\"menses\" \"ovulation\"). y_scale string specifying y-axis scale (\"person-centered\", \"person-centered_roll\", \"raw\", \"roll\"). include_impute boolean indicating whether use imputed cycle time values. rollingavg numeric indicating many days rolling average use, default 5","code":""},{"path":"/reference/cycle_plot_individual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Cycle-Specific Plots and Summary Data for a Given ID — cycle_plot_individual","text":"list cycle contains: $plot: cycle-specific ggplot object ID displayed $summary: corresponding summary data (dat_summary)","code":""},{"path":"/reference/cycle_plot_individual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Cycle-Specific Plots and Summary Data for a Given ID — cycle_plot_individual","text":"","code":"data(cycledata)  data_with_scaling <- pacts_scaling(   data,    id = id,    date = date,    menses = menses,    ovtoday = ovtoday,    lower_cyclength_bound = 21,    upper_cyclength_bound = 35 ) #> Error in UseMethod(\"mutate\"): no applicable method for 'mutate' applied to an object of class \"function\""},{"path":"/reference/cycledata.html","id":null,"dir":"Reference","previous_headings":"","what":"Example longitudinal daily dataset with cycle measures — cycledata","title":"Example longitudinal daily dataset with cycle measures — cycledata","text":"dataset contains daily symptom cycle information used test demonstrate package.","code":""},{"path":"/reference/cycledata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example longitudinal daily dataset with cycle measures — cycledata","text":"","code":"cycledata"},{"path":"/reference/cycledata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example longitudinal daily dataset with cycle measures — cycledata","text":"data frame 619 rows 5 variables: id Participant ID date Date symptom observation symptom Daily rating symptom outcome interest menses 1 indicating first day menstruation, menses onset ovtoday 1 indicating estimated day ovulation study, based biomarkers ovulation.","code":""},{"path":"/reference/cycledata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example longitudinal daily dataset with cycle measures — cycledata","text":"Simulated anonymized data","code":""},{"path":"/reference/cycledata_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Non-Missing Symptom Data by Cycle Phase — cycledata_check","title":"Analyze Non-Missing Symptom Data by Cycle Phase — cycledata_check","text":"function provides detailed information availability non-missing symptom data, stratified cycle phases (luteal follicular) overall availability. also generates visualizations aid data quality assessment.","code":""},{"path":"/reference/cycledata_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Non-Missing Symptom Data by Cycle Phase — cycledata_check","text":"","code":"cycledata_check(data, symptom_columns)"},{"path":"/reference/cycledata_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Non-Missing Symptom Data by Cycle Phase — cycledata_check","text":"data data frame containing input data. Must include columns scaled cycle day variables symptom dependent variables interest. symptom_columns character vector column names representing dependent variables interest. example, c(\"symptom1\", \"symptom2\", \"symptom3\"), name corresponds column data set.","code":""},{"path":"/reference/cycledata_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Non-Missing Symptom Data by Cycle Phase — cycledata_check","text":"list containing three components: by_id: data frame summarizing non-missing values ID symptom, including: Total number non-missing values. Number non-missing values luteal phase. Number non-missing values follicular phase. overall: data frame summarizing non-missing values symptom, including: Total number non-missing values. Number non-missing values luteal phase. Number non-missing values follicular phase. Plots: Visualizations showing availability non-missing data symptom, stratified ID.","code":""},{"path":"/reference/cycledata_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Non-Missing Symptom Data by Cycle Phase — cycledata_check","text":"","code":"# Load example dataset data(cycledata)  data_with_scaling <- pacts_scaling(   data,    id = id,    date = date,    menses = menses,    ovtoday = ovtoday,    lower_cyclength_bound = 21,    upper_cyclength_bound = 35 ) #> Error in UseMethod(\"mutate\"): no applicable method for 'mutate' applied to an object of class \"function\"  # Analyze symptom data availability data_available_info <- cycledata_check(   data_with_scaling,    symptom_columns = c(\"symptom\") ) #> Error: object 'data_with_scaling' not found  # View results print(data_available_info$by_id) #> Error: object 'data_available_info' not found print(data_available_info$overall) #> Error: object 'data_available_info' not found print(data_available_info$data_symptom_plots$symptom) #> Error: object 'data_available_info' not found"},{"path":"/reference/launch_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the Menstrual Cycle Shiny App — launch_app","title":"Launch the Menstrual Cycle Shiny App — launch_app","text":"function launches interactive Shiny application designed help users upload process menstrual cycle data. app provides tools apply Phase-Aligned Cycle Time Scaling (PACTS), generate scaled cycleday variables, visualize results intuitive, user-friendly interface.","code":""},{"path":"/reference/launch_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the Menstrual Cycle Shiny App — launch_app","text":"","code":"launch_app()"},{"path":"/reference/launch_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch the Menstrual Cycle Shiny App — launch_app","text":"Users can upload .csv file, process data using built-PACTS functionality, explore cycle-aligned visualizations support analysis interpretation.","code":""},{"path":"/reference/pacts_scaling.html","id":null,"dir":"Reference","previous_headings":"","what":"Phase-Aligned Cycle Time Scaling (PACTS) — pacts_scaling","title":"Phase-Aligned Cycle Time Scaling (PACTS) — pacts_scaling","text":"function uses Phase-Aligned Cycle Time Scaling (PACTS) method, described Nagpal et al. (2025), compute continuous, biologically meaningful cycle time variables long-format dataset, row represents unique observation date specific naturally-cycling individual.","code":""},{"path":"/reference/pacts_scaling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phase-Aligned Cycle Time Scaling (PACTS) — pacts_scaling","text":"","code":"pacts_scaling(   data,   id,   date,   menses,   ovtoday,   lower_cyclength_bound = 21,   upper_cyclength_bound = 35 )"},{"path":"/reference/pacts_scaling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phase-Aligned Cycle Time Scaling (PACTS) — pacts_scaling","text":"data data frame containing required input variables. id unique identifier naturally-cycling individual dataset. date date column corresponding day observation. Ensure id-date combinations unique. may wish reclassify post-midnight survey entries previous day maintain alignment sleep daily tracking data. menses binary column (0/1) indicating first day menses onset, 1 marks onset. subsequent bleeding days set 0. Periovulatory spotting also excluded. ovtoday binary column (0/1) indicating day estimated ovulation. Required even biomarkers collected—use column 0s NAs case. Accepted ovulation determination methods include: Urinary LH surge tests: Code ovtoday == 1 day first positive test (LH +1). Specify brand threshold (e.g., 40 mIU/ml). Basal body temperature (BBT): Code ovtoday == 1 day BBT nadir (BBT +1). Specify measurement method. Daily hormone assays: See Nagpal et al. (2025) guidance. lower_cyclength_bound Numeric lower bound cycle lengths include scaling. Default 21. upper_cyclength_bound Numeric upper bound cycle lengths include scaling. Default 35.","code":""},{"path":"/reference/pacts_scaling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phase-Aligned Cycle Time Scaling (PACTS) — pacts_scaling","text":"original data frame following additional columns: scaled_cycleday: continuous cycle time variable centered menses onset (menses == 1 → 0), ranging -1 (start luteal phase) +1 (ovulation). includes cycles biomarker-confirmed ovulation. scaled_cycleday_impute: , includes cycles ovulation imputed using day -15. Offers broader coverage across dataset, cost lower precision. scaled_cycleday_ov: cycle time variable centered ovulation day (ovtoday == 1 → 0), ranging -1 (start follicular phase) +1 (end luteal phase). includes cycles confirmed ovulation. scaled_cycleday_imp_ov: , uses imputed ovulation (ovtoday_impute == 1) cycles lacking biomarker confirmation. Centered either confirmed imputed ovulation. ovtoday_impute: binary column indicating imputed ovulation days (value 1) cycles without confirmed ovulation, estimated 15 days menses onset.","code":""},{"path":"/reference/pacts_scaling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phase-Aligned Cycle Time Scaling (PACTS) — pacts_scaling","text":"PACTS method aligns observations across cycles centering time either menses onset ovulation. allows researchers model menstrual cycle dynamics continuous functions time, improving sensitivity interpretability. function requires identification menses onset (menses) estimated day ovulation (ovtoday), may determined via biomarker (preferred) imputed based typical luteal phase length unavailable. ovulation directly assessed, function imputes ovulation 15 days prior next menses onset (.e., last day follicular phase), based population-average luteal phase length. Imputed ovulation days recorded new binary column, ovtoday_impute. Reporting often ovulation confirmed using biomarkers versus imputed important transparency scientific rigor. Whenever possible, researchers use objective biomarkers LH tests basal body temperature (BBT) identify ovulation, methods provide greater precision. function supports confirmed imputed ovulation, allowing analyses flexibly account variable data availability across participants cycles. guidance ovulation identification justification -15 day imputation approach, see: Nagpal et al. (2025). Studying Menstrual Cycle Continuous Variable: Implementing Phase-Aligned Cycle Time Scaling (PACTS) menstrualcycleR package. https://doi.org/10.31219/osf.io/hd5xw_v1 Schmalenberger et al. (2021). study menstrual cycle: Practical tools recommendations. Psychoneuroendocrinology, 123, 104895. https://doi.org/10.1016/j.psyneuen.2020.104895","code":""},{"path":"/reference/pacts_scaling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phase-Aligned Cycle Time Scaling (PACTS) — pacts_scaling","text":"","code":"# Load the example dataset data(cycledata)  data_with_scaling <- pacts_scaling(   data,    id = id,    date = date,    menses = menses,    ovtoday = ovtoday,    lower_cyclength_bound = 21,    upper_cyclength_bound = 35 ) #> Error in UseMethod(\"mutate\"): no applicable method for 'mutate' applied to an object of class \"function\"   # View the result print(data_with_scaling) #> Error: object 'data_with_scaling' not found"},{"path":"/reference/process_luteal_phase_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Data (Internal) — process_luteal_phase_base","title":"Process Data (Internal) — process_luteal_phase_base","text":"Internal helper functions process data.","code":""},{"path":"/reference/process_luteal_phase_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Data (Internal) — process_luteal_phase_base","text":"","code":"process_luteal_phase_base(data, id, date, menses)"},{"path":"/reference/process_luteal_phase_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Data (Internal) — process_luteal_phase_base","text":"data data frame containing cycle data. id column specifying individual ids. date column specifying dates. menses column indicating menses (0/1).","code":""},{"path":"/reference/process_luteal_phase_base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Data (Internal) — process_luteal_phase_base","text":"data frame processed data.","code":""},{"path":"/reference/summary_ovulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Ovulation Confirmation and Imputation — summary_ovulation","title":"Summarize Ovulation Confirmation and Imputation — summary_ovulation","text":"function provides summary ovulation identified across dataset—either direct confirmation using biomarkers via imputation based menstrual cycle timing.","code":""},{"path":"/reference/summary_ovulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Ovulation Confirmation and Imputation — summary_ovulation","text":"","code":"summary_ovulation(data)"},{"path":"/reference/summary_ovulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Ovulation Confirmation and Imputation — summary_ovulation","text":"data dataframe containing input data. Must include columns scaled cycle day variables symptoms/dependent variables interest. Scaled cycle day variables added dataframe applying pacts_scaling() function. (See examples )","code":""},{"path":"/reference/summary_ovulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Ovulation Confirmation and Imputation — summary_ovulation","text":"list two data frames: ovstatus_total: dataset-level summary showing: number cycles confirmed ovulation (ovtoday == 1). number cycles imputed ovulation (ovtoday_impute == 1). ovstatus_id: participant-level summary showing, unique ID: number cycles confirmed ovulation. number cycles imputed ovulation.","code":""},{"path":"/reference/summary_ovulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize Ovulation Confirmation and Imputation — summary_ovulation","text":"Specifically, counts number cycles ovulation : Confirmed using objective biomarkers (.e., 1 ovtoday column), urinary LH surge tests basal body temperature (BBT). Imputed using backward-count method, estimates ovulation 15 days subsequent menses onset (ovtoday_impute == 1), based typical length luteal phase. output includes : Overall summary counts across entire dataset. Per-individual summaries support participant-level quality checks reporting. summary essential understanding data quality transparently reported publications. helps clarify often ovulation timing determined using biologically grounded methods versus estimated assumptions. Whenever possible, biomarker-based confirmation (e.g., LH BBT) preferred, provides precise physiologically valid estimates ovulation timing. enhances accuracy cycle phase alignment reduces potential sources error time-sensitive analyses. biomarkers unavailable, imputation via -15 day backward-count method offers biologically valid estimate assuming ovulation occurs cycle midpoint. method accounts relative stability luteal phase length recommended midpoint-based estimates (see Nagpal et al., 2025). guidance ovulation identification rationale -15 day imputation method, see: Nagpal et al. (2025). Studying Menstrual Cycle Continuous Variable: Implementing Phase-Aligned Cycle Time Scaling (PACTS) menstrualcycleR package. https://doi.org/10.31219/osf.io/hd5xw_v1 Schmalenberger et al. (2021). study menstrual cycle: Practical tools recommendations. Psychoneuroendocrinology, 123, 104895. https://doi.org/10.1016/j.psyneuen.2020.104895","code":""},{"path":"/reference/summary_ovulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Ovulation Confirmation and Imputation — summary_ovulation","text":"","code":"data(cycledata)  data_with_scaling <- pacts_scaling(   data,    id = id,    date = date,    menses = menses,    ovtoday = ovtoday,    lower_cyclength_bound = 21,    upper_cyclength_bound = 35 ) #> Error in UseMethod(\"mutate\"): no applicable method for 'mutate' applied to an object of class \"function\"  ov_summary = summary_ovulation(data_with_scaling) #> Error: object 'data_with_scaling' not found print(ov_summary) #> Error: object 'ov_summary' not found ov_summary$ovstatus_total #> Error: object 'ov_summary' not found ov_summary$ovstatus_id #> Error: object 'ov_summary' not found"}]
